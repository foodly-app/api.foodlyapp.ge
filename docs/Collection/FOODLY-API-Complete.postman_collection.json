{
	"info": {
		"_postman_id": "foodly-api-collection-complete",
		"name": "FOODLY API - Complete Collection",
		"description": "Complete API collection for FOODLY multi-platform endpoints with authentication, kiosk spots, and all features (September 2025)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('üöÄ Request to:', pm.request.url.toString());",
					"console.log('üîë Auth token:', pm.environment.get('auth_token') ? 'Present' : 'Missing');"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('‚è±Ô∏è Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"if (pm.response.headers.get('Content-Type')) {",
					"    pm.test('üìÑ Response has correct Content-Type', function () {",
					"        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"    });",
					"}"
				]
			}
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Login User (Kiosk)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_email', response.user.email);",
									"    pm.environment.set('client_type', response.client);",
									"    ",
									"    pm.test('üé´ Token received', function () {",
									"        pm.expect(response.token).to.not.be.empty;",
									"    });",
									"    ",
									"    pm.test('üíª Client type is kiosk', function () {",
									"        pm.expect(response.client).to.eql('kiosk');",
									"    });",
									"    ",
									"    console.log('‚úÖ Login successful for:', response.user.email);",
									"} else {",
									"    console.log('‚ùå Login failed with status:', pm.response.code);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"client\": \"kiosk\",\n  \"device_name\": \"Postman Collection Test\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User (Android)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.test('üì± Client type is android', function () {",
									"        pm.expect(response.client).to.eql('android');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"client\": \"android\",\n  \"device_name\": \"Android Test Device\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User (iOS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.test('üçé Client type is ios', function () {",
									"        pm.expect(response.client).to.eql('ios');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"client\": \"ios\",\n  \"device_name\": \"iOS Test Device\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"newuser@foodlyapp.ge\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"client\": \"kiosk\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üß™ Public Test Endpoints",
			"item": [
				{
					"name": "Test Kiosk",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/test?locale={{locale}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "{{locale}}",
									"description": "Test locale support"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Android",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/android/spots/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"android",
								"spots",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test iOS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ios/spots/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ios",
								"spots",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîí Protected Endpoints",
			"item": [
				{
					"name": "üè¢ Kiosk Platform",
					"item": [
						{
							"name": "üìç Spots",
							"item": [
								{
									"name": "Get All Spots",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('‚úÖ Response is successful', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('üìä Response has spots data', function () {",
													"    const response = pm.response.json();",
													"    pm.expect(response.data).to.be.an('array');",
													"    console.log('üìç Total spots found:', response.data.length);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/kiosk/spots?locale={{locale}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"kiosk",
												"spots"
											],
											"query": [
												{
													"key": "locale",
													"value": "{{locale}}",
													"description": "Language locale (ka, en, ru, tr)"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Spot by Slug",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('‚úÖ Response is successful', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('üìç Response has spot data', function () {",
													"    const response = pm.response.json();",
													"    pm.expect(response.data).to.be.an('object');",
													"    pm.expect(response.data.slug).to.exist;",
													"    console.log('üìç Spot found:', response.data.name || response.data.slug);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/kiosk/spots/{{spot_slug}}?locale={{locale}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"kiosk",
												"spots",
												"{{spot_slug}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "{{locale}}",
													"description": "Language locale"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Restaurants by Spot",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('‚úÖ Response is successful', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('üçΩÔ∏è Response has restaurants data', function () {",
													"    const response = pm.response.json();",
													"    pm.expect(response.data).to.be.an('array');",
													"    console.log('üçΩÔ∏è Restaurants found:', response.data.length);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/kiosk/spots/{{spot_slug}}/restaurants?locale={{locale}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"kiosk",
												"spots",
												"{{spot_slug}}",
												"restaurants"
											],
											"query": [
												{
													"key": "locale",
													"value": "{{locale}}",
													"description": "Language locale"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Top 10 Restaurants by Spot",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('‚úÖ Response is successful', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('üî• Response has top restaurants data', function () {",
													"    const response = pm.response.json();",
													"    pm.expect(response.data).to.be.an('array');",
													"    pm.expect(response.data.length).to.be.at.most(10);",
													"    console.log('üî• Top restaurants found:', response.data.length);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/kiosk/spots/{{spot_slug}}/restaurants/top10?locale={{locale}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"kiosk",
												"spots",
												"{{spot_slug}}",
												"restaurants",
												"top10"
											],
											"query": [
												{
													"key": "locale",
													"value": "{{locale}}",
													"description": "Language locale"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "üçΩÔ∏è Restaurants",
							"item": [
								{
									"name": "Get All Restaurants",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('‚úÖ Response is successful', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('üçΩÔ∏è Response has restaurants data', function () {",
													"    const response = pm.response.json();",
													"    pm.expect(response.data).to.be.an('array');",
													"    console.log('üçΩÔ∏è Total restaurants found:', response.data.length);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/kiosk/restaurants?locale={{locale}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"kiosk",
												"restaurants"
											],
											"query": [
												{
													"key": "locale",
													"value": "{{locale}}",
													"description": "Language locale"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "üì± Android Platform",
					"item": [
						{
							"name": "üçΩÔ∏è Restaurants",
							"item": [
								{
									"name": "Get All Restaurants",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/android/restaurants?locale=en",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"android",
												"restaurants"
											],
											"query": [
												{
													"key": "locale",
													"value": "en",
													"description": "Android platform uses English by default"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "üçé iOS Platform",
					"item": [
						{
							"name": "üçΩÔ∏è Restaurants",
							"item": [
								{
									"name": "Get All Restaurants",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{auth_token}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/ios/restaurants?locale=ru",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"ios",
												"restaurants"
											],
											"query": [
												{
													"key": "locale",
													"value": "ru",
													"description": "iOS platform supports Russian locale"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://api.foodlyapp.ge",
			"type": "string"
		}
	]
}