{
	"info": {
		"_postman_id": "foodly-api-collection",
		"name": "FOODLY API - Multi Platform",
		"description": "Complete API collection for FOODLY multi-platform endpoints (Kiosk, Android, iOS) with authentication and locale testing.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@foodlyapp.ge\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        console.log('Token saved:', response.data.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@foodlyapp.ge\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîì Public Test Endpoints",
			"item": [
				{
					"name": "Kiosk Test (Georgian)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is success', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.status).to.eql('success');",
									"});",
									"",
									"pm.test('Platform is kiosk', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.platform).to.eql('kiosk');",
									"});",
									"",
									"pm.test('Locale is ka', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.locale).to.eql('ka');",
									"});",
									"",
									"pm.test('X-App-Locale header is present', function () {",
									"    pm.expect(pm.response.headers.get('X-App-Locale')).to.eql('ka');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/test?locale=ka",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "ka"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Android Test (English)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is success', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.status).to.eql('success');",
									"});",
									"",
									"pm.test('Platform is android', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.platform).to.eql('android');",
									"});",
									"",
									"pm.test('Locale is en', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.locale).to.eql('en');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/android/test?locale=en",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"android",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "en"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "iOS Test (Russian)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is success', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.status).to.eql('success');",
									"});",
									"",
									"pm.test('Platform is ios', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.platform).to.eql('ios');",
									"});",
									"",
									"pm.test('Locale is ru', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.locale).to.eql('ru');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ios/test?locale=ru",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ios",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "ru"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Locale Fallback Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Unsupported locale falls back to en', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.locale).to.eql('en');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/test?locale=fr",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "fr",
									"description": "Unsupported locale - should fallback to 'en'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîí Protected Endpoints",
			"item": [
				{
					"name": "Kiosk Restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response requires authentication', function () {",
									"    if (pm.response.code === 401) {",
									"        pm.expect(pm.response.json().message).to.include('Unauthenticated');",
									"    } else if (pm.response.code === 200) {",
									"        const response = pm.response.json();",
									"        pm.expect(response.platform).to.eql('kiosk');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/restaurants?locale=ka",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"restaurants"
							],
							"query": [
								{
									"key": "locale",
									"value": "ka"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Android Restaurants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/android/restaurants?locale=en",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"android",
								"restaurants"
							],
							"query": [
								{
									"key": "locale",
									"value": "en"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "iOS Restaurants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ios/restaurants?locale=ru",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ios",
								"restaurants"
							],
							"query": [
								{
									"key": "locale",
									"value": "ru"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üõ† Database Testing",
			"item": [
				{
					"name": "Database Connection Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/test/db-connection",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"test",
								"db-connection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Database Table Structure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/test/table/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"test",
								"table",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üåê Locale Testing",
			"item": [
				{
					"name": "Accept-Language Header Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Locale detected from Accept-Language header', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.locale).to.eql('ka');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "ka-GE,ka;q=0.9,en;q=0.8"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Supported Locales",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Test all supported locales",
									"const locales = ['en', 'ka', 'ru', 'tr'];",
									"pm.globals.set('test_locales', JSON.stringify(locales));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/kiosk/test?locale=tr",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kiosk",
								"test"
							],
							"query": [
								{
									"key": "locale",
									"value": "tr",
									"description": "Turkish locale test"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"pm.test('Response has correct Content-Type', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://api.foodlyapp.test",
			"type": "string"
		}
	]
}